include:
- template: Security/Dependency-Scanning.gitlab-ci.yml
- template: Security/License-Scanning.gitlab-ci.yml
- template: Security/SAST.gitlab-ci.yml
- template: Security/Secret-Detection.gitlab-ci.yml
- template: Container-Scanning.gitlab-ci.yml

image: golang:1.15

stages:
- prepare
- build
- docker-build
- test
- build-site
- publish
- docker-release

workflow:
  rules:
  - if: $CI_MERGE_REQUEST_ID
  - if: $CI_COMMIT_BRANCH == "master"

variables:
  GOPATH: $CI_PROJECT_DIR/.go
  NETLIFY_DIRECTORY: public
  CI_APPLICATION_REPOSITORY: $CI_REGISTRY_IMAGE

.go-cache:
  before_script:
  - mkdir -p .go
  cache:
    key: "$CI_COMMIT_REF_SLUG"
    paths:
    - .go/pkg/mod/

gomod:
  stage: prepare
  extends: .go-cache
  script:
  - go mod download

build:
  stage: build
  needs:
  - gomod
  extends: .go-cache
  variables:
    CGO_ENABLED: "0"
  script:
  - go build -o keruu
  artifacts:
    paths:
    - keruu
    expire_in: 10 days

.docker-job:
  image: docker:latest
  services:
  - docker:dind
  before_script:
  - docker login -u "$CI_REGISTRY_USER" -p "$CI_REGISTRY_PASSWORD" $CI_REGISTRY

build-docker-image:
  stage: docker-build
  extends: .docker-job
  needs:
  - build
  variables:
    CONTAINER_IMAGE: "$CI_REGISTRY_IMAGE:$CI_COMMIT_SHA"
  script:
  - docker build -f Dockerfile --pull -t $CONTAINER_IMAGE .
  - docker push $CONTAINER_IMAGE

lint:
  stage: test
  needs:
  - gomod
  extends: .go-cache
  image: golangci/golangci-lint:v1.27.0
  script:
  - golangci-lint run -v
  rules:
  - if: $CI_PIPELINE_SOURCE != "schedule"

test:
  stage: test
  needs:
  - gomod
  extends: .go-cache
  before_script:
  - go get github.com/t-yuki/gocover-cobertura
  script:
  - go test -race -coverpkg ./... -coverprofile=coverage.txt -covermode=atomic ./...
  - $GOPATH/bin/gocover-cobertura < coverage.txt > coverage.xml
  rules:
  - if: $CI_PIPELINE_SOURCE != "schedule"
  artifacts:
    reports:
      cobertura: coverage.xml

build-site:
  stage: build-site
  before_script:
  - mkdir -p $NETLIFY_DIRECTORY
  script:
  - ./keruu -config lepo-keruu/config.yaml -output $NETLIFY_DIRECTORY/index.html
  - cp lepo-keruu/headers.txt $NETLIFY_DIRECTORY/_headers
  artifacts:
    paths:
    - $NETLIFY_DIRECTORY
    expire_in: 2 days

publish:
  stage: publish
  image: registry.gitlab.com/lepovirta/netlify-deployer:ci
  script:
  - gitlab-deploy-site
  rules:
  - if: $CI_COMMIT_BRANCH == "master"
  - if: $CI_MERGE_REQUEST_ID

publish-docker-image:
  stage: docker-release
  extends: .docker-job
  needs:
  - build-docker-image
  variables:
    CONTAINER_IMAGE: "$CI_REGISTRY_IMAGE:$CI_COMMIT_SHA"
    CONTAINER_IMAGE_RELEASE: "$CI_REGISTRY_IMAGE:latest"
  script:
  - docker pull $CONTAINER_IMAGE
  - docker tag $CONTAINER_IMAGE $CONTAINER_IMAGE_RELEASE
  - docker push $CONTAINER_IMAGE_RELEASE
  rules:
  - if: $CI_COMMIT_BRANCH == "master"
